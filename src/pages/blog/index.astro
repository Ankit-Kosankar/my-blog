---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import { Image } from 'astro:assets';
import { getMediumPosts} from '../../utils/getMediumPosts';
import { parseISO, parse } from 'date-fns';

const POSTS_PER_PAGE = 5;
const page = Number(Astro.url.searchParams.get('page') || 1);

function parseBlogDate(dateStr: string | Date) {
  if (dateStr instanceof Date) return dateStr;
  if (typeof dateStr !== 'string') return new Date();

  // Try ISO first
  const isoDate = parseISO(dateStr);
  if (isoDate instanceof Date && !isNaN(isoDate.valueOf())) {
    return isoDate;
  }
  // Try 'MMM dd yyyy'
  const customDate = parse(dateStr, 'MMM dd yyyy', new Date());
  if (customDate instanceof Date && !isNaN(customDate.valueOf())) {
    return customDate;
  }
  // Fallback: now
  return new Date();
}

// Fetch local posts
const allLocalPosts = await getCollection('blog');
console.log('🔍 Debug: Found', allLocalPosts.length, 'local posts');

const localPosts = allLocalPosts.map(post => {
  const link = `/blog/${post.id.replace(/\.mdx?$/, '')}/`;
  console.log('🔗 Debug: Post', post.data.title, '->', link);
  return {
    title: post.data.title,
    link: link,
    pubDate: parseBlogDate(post.data.pubDate),
    source: 'local',
  };
});

// Fetch Medium posts
const mediumPosts = await getMediumPosts(5);

// Combine and sort
const allPosts : any = [...localPosts, ...mediumPosts].sort(
  (a, b) => b.pubDate.valueOf() - a.pubDate.valueOf()
);

// Pagination
const totalPages = Math.ceil(allPosts.length / POSTS_PER_PAGE);
const paginatedPosts = allPosts.slice(
  (page - 1) * POSTS_PER_PAGE,
  page * POSTS_PER_PAGE
);

type BlogPost = {
  title: string;
  link: string;
  pubDate: Date;
  source: string;
};
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			main {
				width: 960px;
			}
			
			.hero-section {
				/* text-align: center; */
				margin-bottom: 3rem;
				padding: 2rem 0;
				background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
				/* border: 1px solid var(--gray-light); */
				color: white;
				border-radius: 16px;
				margin-bottom: 2rem;
				padding-left: 2rem;
			}
			
			.hero-section h1 {
				font-size: 1rem;
				margin: 0;
				text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
			}
			
			.hero-section p {
				font-size: 1rem;
				margin: 1rem 0 0 0;
				opacity: 0.9;
			}
			
			.stats {
				display: flex;
				justify-content: center;
				gap: 2rem;
				margin-top: 1.5rem;
			}
			
			.stat-item {
				text-align: center;
			}
			
			.stat-number {
				font-size: 1.5rem;
				font-weight: bold;
				display: block;
			}
			
			.stat-label {
				font-size: 0.9rem;
				opacity: 0.8;
			}
			
			ul {
				display: flex;
				flex-wrap: wrap;
				gap: 2rem;
				list-style-type: none;
				margin: 0;
				padding: 0;
			}
			ul li {
				width: calc(50% - 1rem);
				background: #f8f9fa;
				padding: 1rem;
				border-radius: 12px;
				/* border-left: 2px solid var(--accent); */
				border: 1px solid var(--gray-light);
				transition: transform 0.2s ease, box-shadow 0.2s ease;
			}
			
			ul li:hover {
				transform: translateY(-2px);
				box-shadow: 0 8px 25px rgba(0,0,0,0.1);
			}
			
			ul li * {
				text-decoration: none;
				transition: 0.2s ease;
			}
			
			ul li img {
				margin-bottom: 0.5rem;
				border-radius: 12px;
			}
			ul li a {
				display: block;
			}
			.title {
				margin: 0 0 0.5rem 0;
				/* color: var(--black); */
				color:var(--gray-dark);
				line-height: 1.3;
				font-size: 1rem;
			}
			.date {
				margin: 0;
				color: var(--gray);
				font-size: 0.9rem;
			}
			
			.source-badge {
				display: inline-block;
				padding: 0.2rem 0.6rem;
				background: var(--accent);
				color: white;
				border-radius: 20px;
				font-size: 0.8rem;
				margin-left: 0.5rem;
				font-weight: 500;
			}
			
			.source-badge.medium {
				background: #00ab6c;
			}
			
			.source-badge.local {
				background: #007acc;
			}
			
			ul li a:hover h4,
			ul li a:hover .date {
				color: var(--accent);
			}
			ul a:hover img {
				box-shadow: var(--box-shadow);
			}
			
			.pagination {
				display: flex;
				justify-content: center;
				gap: 1rem;
				margin-top: 3rem;
			}
			
			.pagination a {
				padding: 0.5rem 1rem;
				background: #f8f9fa;
				border-radius: 6px;
				text-decoration: none;
				color: var(--black);
				transition: all 0.2s ease;
			}
			
			.pagination a:hover {
				background: var(--accent);
				color: white;
			}

			.blog-preview-date {
				font-size: 0.85rem;
				color: var(--gray);
				margin: 0;
				font-style: italic;
			}

			@media (max-width: 720px) {
				.hero-section h1 {
					/* font-size: 1.5rem; */
				}
				
				.stats {
					flex-direction: column;
					gap: 1rem;
				}
				
				ul {

					
					gap: 1rem;
				}
				ul li {
					width: 100%;
				}
				
				.pagination {
					flex-wrap: wrap;
					gap: 0.5rem;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<!-- Hero Section -->
			<div class="hero-section">
				<h1>📚 My Dev Notebook</h1>
				<p>Here, I share what I learn — one topic at a time.
				   Each post reflects my understanding, experiences, and takeaways as I explore new ideas and challenges</p>
				<!-- <div class="stats">
					<div class="stat-item">
						<span class="stat-number">{allPosts.length}</span>
						<span class="stat-label">Tutorials</span>
					</div>
					<div class="stat-item">
						<span class="stat-number">{localPosts.length}</span>
						<span class="stat-label">Study Notes</span>
					</div>
					<div class="stat-item">
						<span class="stat-number">{mediumPosts.length}</span>
						<span class="stat-label">Published Tips</span>
					</div>
				</div> -->
			</div>

			<section>
				<ul>
					{
					paginatedPosts.map((post: BlogPost) => (
							<li>
								<a href={post.link} target={post.source === 'medium' ? "_blank" : "_self"}>
									<h4 class="title">{post.title}</h4>
									<time class="blog-preview-date">
										<FormattedDate date={post.pubDate} />
									</time>
									{/* <span class={`source-badge ${post.source}`}>
										{post.source === 'medium' ? '📖 Tutorial' : '💡 Study Note'}
									</span> */}
								</a>
							</li>
						))
					}
				</ul>

				<nav class="pagination">
					{Array.from({ length: totalPages }, (_, i) => (
					  <a
						href={`?page=${i + 1}`}
						style={page === i + 1 ? "font-weight: bold; background: var(--accent); color: white;" : ""}
					  >
						{i + 1}
					  </a>
					))}
				</nav>
			</section>
		</main>
		<Footer />
	</body>
</html>